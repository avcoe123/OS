#include <stdio.h>
#include <sys/types.h>
#include <unistd.h> // Include for fork(), getpid(), and getppid()

int nos[10], n;

void ascending();
void descending();

int main(void) {
    int pid;
    int i, j;

    printf("\nEnter the number of elements: ");
    scanf("%d", &n);

    if (n > 10 || n <= 0) {
        printf("Invalid number of elements. Please enter a number between 1 and 10.\n");
        return 1;
    }

    printf("\nEnter the elements:\n");
    for (i = 0; i < n; i++)
        scanf("%d", &nos[i]);

    pid = fork();

    if (pid < 0) {
        // Error handling for fork failure
        perror("Fork failed");
        return 1;
    } else if (pid == 0) {
        // Child process
        printf("\nChild Process is Executing");
        printf("\nProcess ID = %d\nParent ID = %d", getpid(), getppid());
        ascending();
        printf("\n\n");
    } else {
        // Parent process
        printf("\nParent Process is Executing");
        printf("\nProcess ID = %d\nParent ID = %d", getpid(), getppid());
        descending();
        printf("\n\n");
    }

    return 0;
}

void ascending() {
    int i, j, temp;
    for (i = 0; i < n; i++) {
        for (j = i + 1; j < n; j++) {
            if (nos[i] > nos[j]) {
                temp = nos[i];
                nos[i] = nos[j];
                nos[j] = temp;
            }
        }
    }
    printf("\n\nThe numbers in ascending order are:\n");
    for (i = 0; i < n; i++)
        printf("%d\t", nos[i]);
}

void descending() {
    int i, j, temp;
    for (i = 0; i < n; i++) {
        for (j = i + 1; j < n; j++) {
            if (nos[i] < nos[j]) {
                temp = nos[i];
                nos[i] = nos[j];
                nos[j] = temp;
            }
        }
    }
    printf("\n\nThe numbers in descending order are:\n");
    for (i = 0; i < n; i++)
        printf("%d\t", nos[i]);
}
